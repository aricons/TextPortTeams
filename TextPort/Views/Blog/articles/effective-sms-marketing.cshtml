<!-- Title -->
    <h1 class="mt-4">Send text messages using C# | SMS API</h1>

<!-- Author -->
<p class="lead">by TextPort</p>
<hr>
<!-- Date/Time -->
<p>Posted: December 17th, 2019</p>
<hr>
<!-- Preview Image -->
<img class="img-fluid rounded" src="~/content/images/blog/sms-marketing.jpg" alt="Send text messages using C#">
<hr>

<p>TextPort’s SMS API makes it easy to send text messages using C# and. This post provides a guide on how to set up an account, write your code and start sending text messages in as little as 15 minutes.</p>
<p>The first step is to set up an account. TextPort offers a 15-day free trial. There's no obligation, and no credit card is needed. All you need is a valid email address. Visit the <a href="/trial">free trial</a> page to set up an account and free virtual phone number. The number you choose will be the number that your texts will be sent and received from.</p>
<p>Once your account is set up, visit the API Applications page. To get there, click your username in the top-right corner of the page, then click API Applications.</p>

<p>You will need to assign a name to your your application. Any name will do. You’ll also be assigned an API token and API key. These are essentially your API username and password. They will be passed in the HTTP header to authenticate each API call that you make. The SMS API uses basic authentication where the username and password are passed in the authorization header. See the code samples below.</p>

<img src="~/Content/images/assignapiapplication.png" alt="SMS API Application Setup" />

<p>This post details how to make API calls using the Microsoft Core or .NET  WebClient libra. An alternative would be to use the popular RestSharp library. Details on using RestSharp can be found in this post. Sending text messages using RestSharp.</p>

The 
