@using TextPortCore.Models
@using TextPortCore.Helpers
@model RegistrationData

@{
    ViewBag.Title = "Get Number";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="/scripts/TextPort/GetNumbers.js"></script>
<script type="text/javascript" src="~/scripts/bootbox/bootbox.min.js"></script>

<script type="text/javascript">
    $(function () {
        $('#menu_numbers').addClass("active");

        $('#btnPurchase').click(function (e) {
            var form = $("#form-get-number");
            if (form.valid()) {

                var num = $("#VirtualNumber option:selected").text();
                var leasePer = $("#LeasePeriod").val();
                var periodName = "month";
                if (leasePer.length) {
                    leasePeriod = parseFloat(leasePer);
                    if (leasePeriod > 1) {
                        periodName = "months";
                    }
                }

                bootbox.confirm({
                    title: "Get " + num + "?",
                    message: "Assign " + num + " to your account for a period of " + leasePer + " " + periodName + "?<br />Your account will be debited " + $("#NumberCostTxt").text(),
                    buttons: {
                        cancel: {
                            label: '<i class="fa fa-times"></i> Cancel'
                        },
                        confirm: {
                            label: '<i class="fa fa-check"></i> Confirm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            form.submit();
                        }
                    }
                })
            };
        });

    });
</script>

<div class="row">
    @Html.Partial("_SideMenuBar")
    <div class="col-12 col-md-9">
        <div class="card">
            <div class="card-header">
                <h4>Get a new Number</h4>
            </div>
            <div class="card-body">
                <div class="offset-md-1 col-md-7 col-12">
                    @using (Html.BeginForm("GetNumber", "Numbers", FormMethod.Post, new { id = "form-get-number" }))
                    {
                        @Html.HiddenFor(m => m.NumberCost)
                        @Html.HiddenFor(m => m.AccountId)
                        @Html.HiddenFor(m => m.PurchaseType)
                        @Html.HiddenFor(m => m.PayPalCustom)
                        @Html.HiddenFor(m => m.VirtualNumberId)
                        @Html.HiddenFor(m => m.PurchaseTitle)
                        @Html.HiddenFor(m => m.ProductDescription)
                        @Html.HiddenFor(m => m.CompletionTitle)
                        @Html.HiddenFor(m => m.CompletionMessage)
                        @Html.HiddenFor(m => m.BaseNumberCost)
                        @Html.HiddenFor(m => m.BaseSMSCost)
                        @Html.HiddenFor(m => m.Success)
                        @Html.HiddenFor(m => m.Status)
                        <input type="hidden" id="hidTotalCost" value="0" />

                        <div class="form-group">
                            @Html.LabelFor(m => m.NumberCountryId, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.NumberCountryId, new SelectList(Model.CountriesList, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NumberCountryId, null, new { @class = "text-danger" })
                            @*<p class="subscript">* All number purchases include credit for 50 text messages.</p>*@
                        </div>
                        <div id="DivAreaCode">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AreaCode, new { @class = "form-label" })
                                <div class="form-row m-1">
                                    @Html.TextBoxFor(m => m.AreaCode, new { @class = "col-3 col-md-2 form-control", placeholder = "000" })
                                    <div id="spintiller1" class="spinner-border collapse ml-3" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                    <div class="ml-3">
                                        <label id="AreaCodeDescription" class="col-form-label"></label>
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.AreaCode, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group" id="DivTollFreePrefix" style="display:none">
                            @Html.LabelFor(m => m.TollFreePrefix, new { @class = "form-label" })
                            <div class="row">
                                <div class="col-3">
                                    @Html.DropDownListFor(m => m.TollFreePrefix, new SelectList(Model.TollFreeAreaCodesList, "Value", "Text"), new { @class = "form-control" })
                                </div>
                                <div id="spintiller2" class="spinner-border collapse" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.TollFreePrefix, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.VirtualNumber, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.VirtualNumber, new SelectList(Model.NumbersList, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.VirtualNumber, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LeasePeriod, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.LeasePeriod, new SelectList(Model.LeasePeriodsList, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LeasePeriod, null, new { @class = "text-danger" })
                        </div>
                        <div class="row lower-label">
                            <label>Number Cost</label>
                            <label id="NumberCostTxt"></label>
                        </div>
                        <div class="row lower-label">
                            <label>Available Credit</label>
                            <label id="AvailableCredit">@Formatting.DisplayMoney(Model.CreditCurrentBalance)</label>
                        </div>
                        <div class="row lower-label">
                            <label>Remaining Credit After Purchase</label>
                            <label id="RemainingCredit"></label>
                        </div>
                        <div id="creditOK">
                            <div class="form-group">
                                <button id="btnPurchase" type="button" class="btn btn-primary">@(Model.PurchaseType == "ComplimentaryNumber" ? "Select Number" : "Complete Purchase")</button>
                            </div>
                        </div>
                        <div id="creditInsufficient" style="display: none">
                            <div class="pl-0">
                                <p class="alert alert-danger text-center">
                                    Your balance is not sufficient to make this purchase.
                                    <br />
                                    <br />
                                    <a href="/account/balance" class="btn btn-danger" role="button" aria-disabled="true">Top Up Credit</a>
                                </p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>