@model TextPortCore.Models.MessagingContainer
@using TextPortCore.Helpers;
@{
    ViewData["Title"] = "Messages";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/content/css/messaging.css">
<link rel="stylesheet" href="~/content/css/emoji.css">
<link rel="stylesheet" href="~/Scripts/dropzone/basic.css">

<script src="~/scripts/emoji/config.js"></script>
<script src="~/scripts/emoji/util.js"></script>
<script src="~/scripts/emoji/jquery.emojiarea.js"></script>
<script src="~/scripts/emoji/emoji-picker.js"></script>
<script src="~/scripts/dropzone/dropzone.js"></script>

<script type="text/javascript">

    Dropzone.autoDiscover = false;
    var mmsFiles = [];

    $(function () {

        $('#from_number').on("change", function (e) {
            getRecentsForVirtualNumber(numberToE164($("#from_number option:selected").val()));
        });

        $('#btn_send_message').on("click", function (e) {
            sendMessage();
        });

        $('#new_recipient_number').on("focus", function (e) {
            $("#msg_list").html('');
            $('.chl').removeClass("active_chat");
            checkSendButtonEligibility();
        });

        $('#new_recipient_number').on("keyup", function (e) {
            var newNumber = $("#new_recipient_number").cleanVal();
            if (newNumber.length >= 10) {
                $("#hidActiveDestinationNumber").val(newNumber);
            }
            else {
                $("#hidActiveDestinationNumber").val('');
            }
            checkSendButtonEligibility();
        });

        $("#new_recipient_number").mask('(000) 000-0000');

        setChangeDetect();

        // SignalR - Need to declare inHub.client.messageNotification prior to calling $.connection.hub.start();
        var inHub = $.connection.inboundHub;
        // Create a function that the hub can call back to display messages.
        inHub.client.messageNotification = function (fromNumber, toNumber, messageText, messageHtml) {
            //var message = htmlEncode(message);
            var activeDestinationNumber = $("#hidActiveDestinationNumber").val();
            //alert("Message in from " + fromNumber);
            if (fromNumber == activeDestinationNumber) {
                var lastMessageItem = $('.msg_item:last').attr('id');
                if (typeof lastMessageItem != 'undefined') {
                    $("#" + lastMessageItem).after(messageHtml);
                }
                else {
                    $("#msg_list").html('');
                    var msgList = document.getElementById("msg_list");
                    msgList.insertAdjacentHTML("beforeend", messageHtml);
                }
                var ml = $("#msg_list");
                ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);
            }
            else {
                alert("New message received from " + fromNumber + '. ' + messageText);
            }
        }

        inHub.client.deliveryReceipt = function (messageId, messageHtml) {
            //alert("Message for message ID " + messageId + " delivered");
            var msgItem = document.getElementById("td_" + messageId);
            msgItem.insertAdjacentHTML("beforeend", messageHtml);
        }

        // Start the hub
        $.connection.hub.start();

        // Setup emoji picker
        window.emojiPicker = new EmojiPicker({
            iconSize: '25',
            assetsPath: '/content/images/emoji',
            emojiable_selector: '[data-emojiable=true]',
            popupButtonClasses: 'fa fa-smile-o'
        });
        window.emojiPicker.discover();

        $('#emojipick_1').on("keyup", function (e) {
            checkSendButtonEligibility();
        });

        // Setup dropzone
        myDropzone = $("#mmsDropzone").dropzone({
            url: "/messages/uploadfile",
            method: 'POST',
            addRemoveLinks: true,
            thumbnailHeight: 30,
            thumbnailWidth: 30,
            maxFiles: 10,
            maxFilesize: 1000,
            success: function (file) {
                //var imgName = response;
                //file.previewElement.classList.add("dz-success");
                //file.previewElement.hide();
                //this.previewsContainer.hidden();
                file.previewElement.parentNode.removeChild(file.previewElement);
                //alert("Successfully uploaded : " + file.name + ". HTML: " + file.xhr.response);

                var fileId = $(file.xhr.response).attr("id");
                var fileName = file.name.replace(/\s/g, "");
                //mmsFiles.push({ "Name": fileName, "UniqueName": fileId + "_" + fileName });
                mmsFiles.push({ "UniqueName": fileId + "_" + fileName });

                //debugger;
                var lastMessageItem = $('.msg_item:last').attr('id');
                if (typeof lastMessageItem != 'undefined') {
                    $("#" + lastMessageItem).after(file.xhr.response);
                }
                else {
                    $("#msg_list").html('');
                    var msgList = document.getElementById("msg_list");
                    msgList.insertAdjacentHTML("beforeend", file.xhr.response);
                }

                var ml = $("#msg_list");

                // Animated
                ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

                checkSendButtonEligibility();
            },
            error: function (file) {
                //file.previewElement.classList.add("dz-error");
                alert("Upload error" + file.error);
            },
            //removedfile: function (file) {
            //    //file.previewElement.classList.add("dz-error");
            //    alert("removed file " + file.name);
            //},

            //init: function () {
                //this.on("addedfile", function (file) { alert("Added file." + file.name); });
                //this.on("removedfile", function (file) {
                    //alert("Deleting X " + file.name);
                    @*var fileNameParam = { FileName: file.name };
                     $.post({
                        url: '@Url.Action("DeleteMMSFile", "Messages")',
                        data: JSON.stringify(fileNameParam),
                        contentType: "application/json",
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("Unable to remove file");
                        },
                        success: function (newInputHTML) {
                            //alert("File deleted OK");
                            //MMSFileList(file.name).remove();
                        }
                    });*@
                //});
            //}
        });

        // Scroll to the most-recent message.
        var ml = $("#msg_list");
        ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

        // Check send button eligibility
        var emjpick = $('#emojipick_1');
        //alert(emjpick.html());
        checkSendButtonEligibility();
    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function setChangeDetect() {
        $('.chl').on("click", function (e) {
            var number = this.id.split('_')[1];
            getMessagesForNumber(number);
            $("#hidActiveDestinationNumber").val(number);
            checkSendButtonEligibility();
        });
    }

    function checkSendButtonEligibility() {
        $('#btn_send_message').prop('disabled', true);
        if ($("#hidActiveDestinationNumber").val().length >= 10) {
            $('#emojipick_1').attr('placeholder', 'Type message to ' + $("#hidActiveDestinationNumber").val());
            if ($('#emojipick_1').html().length >= 1 && $('#emojipick_1').html() != "<br>") {
                var foo = $('#emojipick_1').html();
                $('#btn_send_message').prop('disabled', false);
            };

            var dz = Dropzone.forElement("#mmsDropzone");
            if (dz.files.length >= 1) {
                for (i = 0, len = dz.files.length; i < len; i++) {
                    if (dz.files[i].accepted == true) {
                        $('#btn_send_message').prop('disabled', false);
                    }
                }
            }
            //else {
            //    $('#btn_send_message').prop('disabled', true);
            //}
        }
        else {
            //$('#btn_send_message').prop('disabled', true);
            $('#emojipick_1').attr('placeholder', 'Type message');
        }
    }

    function getRecentsForVirtualNumber(virtualNumberId) {
        $("#hidActiveVirtualNumberId").val(virtualNumberId);

        var url = '@Url.Action("GetRecentToNumbersForDedicatedVirtualNumber", "Messages")';
        url = url + "?aid=" + @Model.Account.AccountId + "&vnid=" + virtualNumberId;

        $.get({
            url: url,
            dataType: "html",
            cache: false,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(textStatus + ": Message data load failed. " + errorThrown);
            },
            success: function (newInputHTML) {
                $("#recents").html('');
                var recentsList = document.getElementById("recents");
                recentsList.insertAdjacentHTML("beforeend", newInputHTML);

                var activeNumberElem = $('.active_chat:first').attr('id');
                if (typeof activeNumberElem != 'undefined') {
                    var newActiveNumber = activeNumberElem.split('_')[1];
                    $("#hidActiveDestinationNumber").val(newActiveNumber);
                    getMessagesForNumber(newActiveNumber);
                    setChangeDetect();
                }
                else {
                    $("#msg_list").html('');
                }
                //var rl = $("#recents");
                // Animated
                //rl.animate({ scrollTop: rl.prop("scrollHeight") - rl.height() }, 50);
            }
        })
    }

    function getMessagesForNumber(number) {

        $('#new_recipient_number').val('');
        activeVirtualNumberId = $("#hidActiveVirtualNumberId").val();

        var url = '@Url.Action("GetMessagesForNumber", "Messages")';
        url = url + "?aid=" + @Model.Account.AccountId + "&vnid=" + activeVirtualNumberId + "&num=" + number;
        $.get({
            url: url,
            dataType: "html",
            cache: false,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(textStatus + ": Couldn't load form. " + errorThrown);
            },
            success: function (newInputHTML) {
                $("#msg_list").html('');
                var msgList = document.getElementById("msg_list");
                msgList.insertAdjacentHTML("beforeend", newInputHTML);
                var ml = $("#msg_list");

                // Animated
                ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

                $('.chl').removeClass("active_chat");
                $('#recent_' + number).addClass("active_chat");
            }
        })
    }

    function removeImage(imageId, imageFileName) {
        mmsFiles = jQuery.grep(mmsFiles, function (a) {
            return a.UniqueName !== imageFileName;
        });

        var fileNameParam = { FileName: imageFileName };
        $.post({
            url: '@Url.Action("DeleteMMSFile", "Messages")',
            data: JSON.stringify(fileNameParam),
            contentType: "application/json",
            error: function (jqXHR, textStatus, errorThrown) {
                alert("Unable to remove file");
            },
            success: function (newInputHTML) {
                //alert("File deleted OK");
            }
        });

        document.getElementById(imageId).outerHTML = "";
        var ml = $("#msg_list");
        ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);
        checkSendButtonEligibility();

        return false;
    }

    function sendMessage() {

        if ($("#new_recipient_number").cleanVal() != "") {
            $("#hidActiveDestinationNumber").val("1" + $("#new_recipient_number").cleanVal());
        }
        var message = $("#message_text").val();
        var fromNumberId = $("#hidActiveVirtualNumberId").val();
        var toNumber = $("#hidActiveDestinationNumber").val();

        if (message != "" || mmsFiles.length > 0) {
            if (fromNumberId != "") {
                if (toNumber != "") {
                    // Get MMS files
                    var mmsList = [];
                    //var dz = Dropzone.forElement("#mmsDropzone");
                    //var attachments = dz.getAcceptedFiles();
                    for (i = 0, len = mmsFiles.length; i < len; i++) {
                        mmsList.push({ "FileName": mmsFiles[i].UniqueName });
                    }

                    var messageData = {
                        VirtualNumberId: $("#hidActiveVirtualNumberId").val(),
                        MobileNumber: $("#hidActiveDestinationNumber").val(),
                        MessageText: $("#message_text").val(),
                        MMSFiles: mmsList
                    };

                    $.post({
                        url: '@Url.Action("SendMessage", "Messages")',
                        data: JSON.stringify(messageData),
                        contentType: "application/json",
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(textStatus + ": Failure sending message. " + errorThrown);
                        },
                        success: function (newInputHTML) {
                            var lastMessageItem = $('.msg_item:last').attr('id');
                            if (typeof lastMessageItem != 'undefined') {
                                $("#" + lastMessageItem).after(newInputHTML);

                                $(".temp_img").remove();

                                //dz.removeAllFiles();

                                //$("#msg_list").html('');
                                // Clear all dropzone files
                                var dz = Dropzone.forElement("#mmsDropzone");
                                //dz.removeAllFiles();
                                dz.files = [];
                                mmsFiles = [];

                                //for (i = 0, len = mmsFiles.length; i < len; i++) {
                                //    dz.files[i].accepted = false;

                                //}

                                // Remove any uploaded images (will have the class temp_img)
                                //$(".temp_img").remove();

                                // Clear the message area and apply the placeholder
                                $('#emojipick_1').text('');
                                //$('#emojipick_1').attr('placeholder', 'Type message to ' + $("#hidActiveDestinationNumber").val());
                            }
                            else {
                                $("#msg_list").html('');
                                var msgList = document.getElementById("msg_list");
                                msgList.insertAdjacentHTML("beforeend", newInputHTML);
                            }

                            var ml = $("#msg_list");

                            // Animated
                            ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);
                        }
                    });
                }
                else {
                    alert("No destination number is selected. Make sure a number that the message will be sent to is selected.");
                }
            }
            else {
                alert("No virtual number is selected. Make sure a number that the message will be sent from is selected.");
            }
        }
        else {
            alert("No message entered.");
        }
    }

    function numberToE164(number) {
        return number.replace("\D", "");
    }

    function showEmojiPicker() {
        var ep = $(".emoji_menu");
        if (ep.visible == false) {
            ep.visible = true;
        } else {
            ep.visible = false;
        }
    }
</script>

<input type="hidden" id="hidActiveVirtualNumberId" value="@Model.ActiveVirtualNumberId" />
<input type="hidden" id="hidActiveDestinationNumber" value="@Model.ActiveDestinationNumber" />

@*<h3 class=" text-center">My Messages</h3>*@
<br />

<div class="messages_container">
    @*Left hand column*@
    @if (Model.VirtualNumberCount > 0)
    {
        <div class="inbox_people">
            <div class="heading_wrap">
                <h4 class="num_title">Virtual Number</h4>
                <select id="from_number" class="form-control num_dd">
                    @foreach (TextPortCore.Models.DedicatedVirtualNumber number in Model.Numbers)
                    {
                        <option value="@number.VirtualNumberId">@number.NumberDisplayFormat</option>
                    }
                </select>
            </div>
            <div class="heading_wrap_thin">
                <h4 class="heading_title">Recents</h4>
            </div>
            <div id="recents" class="inbox_chat">
                @Html.Partial("_RecentsList", Model.Recents)
                @*@foreach (TextPortCore.Models.Recent recent in Model.Recents)
                    {
                        <div id="recent_@recent.NumberE164" class="chl chat_list@(recent.IsActiveMessage ? " active_chat" : "")" )>
                            <div class="chat_people">
                                <div class="chat_img"> <img src="~/content/images/user-profile.png"> </div>
                                <div class="chat_ib">
                                    <h5>@recent.Number<span class="chat_date">@string.Format("{0:MMMM dd, yy | hh:mm tt}", recent.TimeStamp)</span></h5>
                                    <p>
                                        @recent.Message
                                    </p>
                                </div>
                            </div>
                        </div>
                    }*@
            </div>
            <div class="new_num_wrap">
                <div class="type_num">
                    <div class="input_num_write">
                        <input id="new_recipient_number" type="text" placeholder="New number" />
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="no_num_wrap">
            <div class="center_vertically">
                <div class="alert alert-primary text-center">
                    <h3 class="alert-primary">No Active Numbers</h3>
                    <p>
                        You don't have any numbers assigned to your account. Click the link below to add a number.
                    </p>
                    <p>
                        <h5>
                            <a href="/numbers/getnumber/">Add a Number</a>
                        </h5>
                    </p>
                </div>
            </div>
        </div>
    }

    @*Right hand column*@
    <div class="message_wrap">
        <div class="mesgs">
            <div id="msg_list" class="msg_history">
                @Html.Partial("_MessageList", Model)
            </div>
        </div>
        <div class="container no-gutters new_msg_pad">
            <div class="row no-gutters">
                <div class="col-sm-10 border-right"><textarea id="message_text" class="message_texarea" data-emojiable="true" data-emoji-ta-id="emojipick_1"></textarea></div>
                <div class="col-sm-2 h-100 my-auto text-center send-btn-container">
                    <div>
                        <button id="btn_send_message" class="btn btn-primary">Send</button>
                    </div>
                </div>
            </div>
            <div class="row no-gutters border-top">
                <div class="col-sm-4"></div>
                <div class="dz-wrap col-sm1 h-100 my-auto text-center">
                    <form action="/messages/UploadFile/" class="dropzone" id="mmsDropzone">
                        <span class="dz-message"><i class="fa fa-image mms-icon msg_function_icon"></i></span>
                    </form>
                </div>
                <div class="col-sm-2"></div>
                <div class="col-sm-1 h-100 my-auto text-center">
                    <i id="emoji-sel-button" class="fa fa-image fa-smile-o msg_function_icon"></i>
                </div>
                <div class="col-sm-4"></div>
            </div>
        </div>
    </div>
</div>

<div class="clearfix"></div>

