@model TextPortCore.Models.MessagingContainer
@using TextPortCore.Helpers;
@{
    ViewData["Title"] = "My Messages";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/content/css/messaging.css">
<link rel="stylesheet" href="~/content/css/emoji.css">
<link rel="stylesheet" href="~/Scripts/dropzone/basic.css">

<script src="~/scripts/emoji/config.js"></script>
<script src="~/scripts/emoji/util.js"></script>
<script src="~/scripts/emoji/jquery.emojiarea.js"></script>
<script src="~/scripts/emoji/emoji-picker.js"></script>
<script src="~/scripts/dropzone/dropzone.js"></script>

<script type="text/javascript">

    var scrWidth = 0;
    Dropzone.autoDiscover = false;
    var mmsFiles = [];

    $(function () {

        scrWidth = window.screen.width;

        $('#from_number').on("change", function (e) {
            getRecentsForVirtualNumber(numberToE164($("#from_number option:selected").val()));
        });

        $('#btn_send_message').on("click", function (e) {
            sendMessage();
        });

        $('#new_recipient_number').on("focus", function (e) {
            $("#msg_list").html('');
            $("#active_num_title").html('');
            $('.chl').removeClass("active_number");
            checkSendButtonEligibility();
        });

        $('#new_recipient_number').on("keyup", function (e) {
            var newNumber = $("#new_recipient_number").cleanVal();
            $("#active_num_title").html(numberToDisplay(newNumber));
            if (newNumber.length >= 10) {
                $("#hidActiveDestinationNumber").val(newNumber);
                $("#active_num_title").html(numberToDisplay(newNumber));
            }
            else {
                $("#hidActiveDestinationNumber").val('');
            }
            checkSendButtonEligibility();
        });

        $("#new_recipient_number").mask('(000) 000-0000');

        setChangeDetect();
        checkBalance();

        // Setup emoji picker
        window.emojiPicker = new EmojiPicker({
            iconSize: '25',
            assetsPath: '/content/images/emoji',
            emojiable_selector: '[data-emojiable=true]',
            popupButtonClasses: 'fa fa-smile-o'
        });
        window.emojiPicker.discover();

        $('#emojipick_1').on("keyup", function (e) {
            checkSendButtonEligibility();
        });

        // Setup dropzone
        myDropzone = $("#mmsDropzone").dropzone({
            url: "/messages/uploadfile",
            method: 'POST',
            addRemoveLinks: true,
            thumbnailHeight: 30,
            thumbnailWidth: 30,
            maxFiles: 10,
            maxFilesize: 4000,
            success: function (file) {
                file.previewElement.parentNode.removeChild(file.previewElement);
                var fileId = $(file.xhr.response).attr("id");
                var fileName = file.name.replace(/\s/g, "");
                mmsFiles.push({ "UniqueName": fileId + "_" + fileName });

                var lastMessageItem = $('.msg_item:last').attr('id');
                if (typeof lastMessageItem != 'undefined') {
                    $("#" + lastMessageItem).after(file.xhr.response);
                }
                else {
                    $("#msg_list").html('');
                    var msgList = document.getElementById("msg_list");
                    msgList.insertAdjacentHTML("beforeend", file.xhr.response);
                }

                var ml = $("#msg_list");

                // Animated
                ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

                checkSendButtonEligibility();
            },
            error: function (file) {
                alert("Upload error" + file.error);
            },
        });

        // Scroll to the most-recent message.
        var ml = $("#msg_list");
        ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

        // Check send button eligibility
        var emjpick = $('#emojipick_1');
        checkSendButtonEligibility();

        $('#number-dropdown-toggle').click(function () {
            if ($('#vn-btn-icon').hasClass('fa-chevron-down')) {
                $('#vn-btn-icon').removeClass('fa-chevron-down');
                $('#vn-btn-icon').addClass('fa-chevron-up');
            }
            else {
                $('#vn-btn-icon').removeClass('fa-chevron-up');
                $('#vn-btn-icon').addClass('fa-chevron-down');
            }
        });

        $('#recipient-dropdown-toggle').click(function () {
            if ($('#recipient-btn-icon').hasClass('fa-chevron-down')) {
                $('#recipient-btn-icon').removeClass('fa-chevron-down');
                $('#recipient-btn-icon').addClass('fa-chevron-up');
            }
            else {
                $('#recipient-btn-icon').removeClass('fa-chevron-up');
                $('#recipient-btn-icon').addClass('fa-chevron-down');
            }
        });

        $('#recents-toggle').click(function () {
            if ($('#recents-btn-icon').hasClass('fa-chevron-down')) {
                $('#recents-btn-icon').removeClass('fa-chevron-down');
                $('#recents-btn-icon').addClass('fa-chevron-up');
            }
            else {
                $('#recents-btn-icon').removeClass('fa-chevron-up');
                $('#recents-btn-icon').addClass('fa-chevron-down');
            }
        });

        $("#active_num_title").html(numberToDisplay($("#hidActiveDestinationNumber").val()));
    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function setChangeDetect() {
        $('.chl').on("click", function (e) {
            var number = this.id.split('_')[1];
            $('#' + this.id).removeClass("active_number new_message");
            getMessagesForNumber(number);
            $("#hidActiveDestinationNumber").val(number);
            checkSendButtonEligibility();

            $("#active_num_title").html(numberToDisplay(number));
            $('.navbar-collapse').collapse('hide');
            $('#recents-btn-icon').removeClass('fa-chevron-up');
            $('#recents-btn-icon').addClass('fa-chevron-down');
        });
    }

    function checkSendButtonEligibility() {
        $('#btn_send_message').prop('disabled', true);
        if ($("#hidActiveDestinationNumber").val().length >= 10) {
            $('#emojipick_1').attr('placeholder', 'Type message to ' + numberToDisplay($("#hidActiveDestinationNumber").val()));
            if ($('#emojipick_1').html().length >= 1 && $('#emojipick_1').html() != "<br>") {
                var foo = $('#emojipick_1').html();
                $('#btn_send_message').prop('disabled', false);
            };

            var dz = Dropzone.forElement("#mmsDropzone");
            if (dz.files.length >= 1) {
                for (i = 0, len = dz.files.length; i < len; i++) {
                    if (dz.files[i].accepted == true) {
                        $('#btn_send_message').prop('disabled', false);
                    }
                }
            }
        }
        else {
            $('#emojipick_1').attr('placeholder', 'Type message');
        }
    }

    function getRecentsForVirtualNumber(virtualNumberId) {
        $("#hidActiveVirtualNumberId").val(virtualNumberId);

        var url = '@Url.Action("GetRecentToNumbersForDedicatedVirtualNumber", "Messages")';
        url = url + "?aid=" + @Model.Account.AccountId + "&vnid=" + virtualNumberId;

        $.get({
            url: url,
            dataType: "html",
            cache: false,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(textStatus + ": Message data load failed. " + errorThrown);
            },
            success: function (newInputHTML) {
                $("#recents").html('');
                var recentsList = document.getElementById("recents");
                recentsList.insertAdjacentHTML("beforeend", newInputHTML);

                var activeNumberElem = $('.active_number:first').attr('id');
                if (typeof activeNumberElem != 'undefined') {
                    var newActiveNumber = activeNumberElem.split('_')[1];
                    $("#hidActiveDestinationNumber").val(newActiveNumber);
                    getMessagesForNumber(newActiveNumber);
                    setChangeDetect();
                }
                else {
                    $("#msg_list").html('');
                }
            }
        })
    }

    function getMessagesForNumber(number) {

        $('#new_recipient_number').val('');
        activeVirtualNumberId = $("#hidActiveVirtualNumberId").val();

        var url = '@Url.Action("GetMessagesForNumber", "Messages")';
        url = url + "?aid=" + @Model.Account.AccountId + "&vnid=" + activeVirtualNumberId + "&num=" + number;
        $.get({
            url: url,
            dataType: "html",
            cache: false,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(textStatus + ": Couldn't load form. " + errorThrown);
            },
            success: function (newInputHTML) {
                $("#msg_list").html('');
                var msgList = document.getElementById("msg_list");
                msgList.insertAdjacentHTML("beforeend", newInputHTML);
                var ml = $("#msg_list");

                // Animated
                ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

                $('.chl').removeClass("active_number");
                $('#recent_' + number).addClass("active_number");
            }
        })
    }

    function removeImage(imageId, imageFileName) {
        mmsFiles = jQuery.grep(mmsFiles, function (a) {
            return a.UniqueName !== imageFileName;
        });

        var fileNameParam = { FileName: imageFileName };
        $.post({
            url: '@Url.Action("DeleteMMSFile", "Messages")',
            data: JSON.stringify(fileNameParam),
            contentType: "application/json",
            error: function (jqXHR, textStatus, errorThrown) {
                alert("Unable to remove file");
            },
            success: function (newInputHTML) {
                //alert("File deleted OK");
            }
        });

        document.getElementById(imageId).outerHTML = "";
        var ml = $("#msg_list");
        ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);
        checkSendButtonEligibility();

        return false;
    }

    function sendMessage() {

        if ($("#new_recipient_number").cleanVal() != "") {
            $("#hidActiveDestinationNumber").val("1" + $("#new_recipient_number").cleanVal());
        }
        var message = $("#message_text").val();
        var fromNumberId = $("#hidActiveVirtualNumberId").val();
        var toNumber = $("#hidActiveDestinationNumber").val();

        if (message != "" || mmsFiles.length > 0) {
            if (fromNumberId != "") {
                if (toNumber != "") {
                    // Get MMS files
                    var mmsList = [];
                    for (i = 0, len = mmsFiles.length; i < len; i++) {
                        mmsList.push({ "FileName": mmsFiles[i].UniqueName });
                    }

                    var messageData = {
                        VirtualNumberId: $("#hidActiveVirtualNumberId").val(),
                        MobileNumber: $("#hidActiveDestinationNumber").val(),
                        MessageText: $("#message_text").val(),
                        MMSFiles: mmsList
                    };

                    $.post({
                        url: '@Url.Action("SendMessage", "Messages")',
                        data: JSON.stringify(messageData),
                        contentType: "application/json",
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(textStatus + ": Failure sending message. " + errorThrown);
                        },
                        success: function (newInputHTML) {
                            var lastMessageItem = $('.msg_item:last').attr('id');
                            if (typeof lastMessageItem != 'undefined') {
                                $("#" + lastMessageItem).after(newInputHTML);

                                $(".temp_img").remove();

                                // Clear all dropzone files
                                var dz = Dropzone.forElement("#mmsDropzone");
                                //dz.removeAllFiles();
                                dz.files = [];
                                mmsFiles = [];

                                // Clear the message area and apply the placeholder
                                $('#emojipick_1').text('');
                                //$('#emojipick_1').attr('placeholder', 'Type message to ' + $("#hidActiveDestinationNumber").val());
                            }
                            else {
                                $("#msg_list").html('');
                                var msgList = document.getElementById("msg_list");
                                msgList.insertAdjacentHTML("beforeend", newInputHTML);
                            }

                            var ml = $("#msg_list");

                            // Animated
                            ml.animate({ scrollTop: ml.prop("scrollHeight") - ml.height() }, 50);

                            getBalance();
                            checkBalance();

                            //_gaq.push(['_trackPageview', '/messages/send']);
                            ga('send', 'pageview', '/messages/send');
                        }
                    });
                }
                else {
                    alert("No destination number is selected. Make sure a number that the message will be sent to is selected.");
                }
            }
            else {
                alert("No virtual number is selected. Make sure a number that the message will be sent from is selected.");
            }
        }
        else {
            alert("No message entered.");
        }
    }

    function showEmojiPicker() {
        var ep = $(".emoji_menu");
        if (ep.visible == false) {
            ep.visible = true;
        } else {
            ep.visible = false;
        }
    }

    function checkBalance() {
        var bal = parseFloat($("#balance").text());
        if (bal < 0.015) {
            $('#msg_area').hide();
            $('#msg_area_disabled').show();
        }
    }
</script>

<input type="hidden" id="hidActiveVirtualNumberId" value="@Model.ActiveVirtualNumberId" />
<input type="hidden" id="hidActiveDestinationNumber" value="@Model.ActiveDestinationNumber" />
<input type="hidden" id="hidBalance" value="@Model.Account.Balance" />

<div class="messages_container">
    <div class="container">
        <div class="row">
            @Html.Partial("_PanelLeft", Model)
            @Html.Partial("_PanelRight", Model)
        </div>
    </div>
</div>
<div id="modal-new"></div>
<div class="clearfix"></div>

